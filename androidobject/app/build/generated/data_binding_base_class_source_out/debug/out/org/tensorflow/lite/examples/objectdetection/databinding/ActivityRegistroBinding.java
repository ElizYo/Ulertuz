// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.objectdetection.R;

public final class ActivityRegistroBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final EditText emailRegister;

  @NonNull
  public final TextView loginText;

  @NonNull
  public final EditText nombreRegister;

  @NonNull
  public final EditText passwordRegister;

  @NonNull
  public final Button registerButton;

  @NonNull
  public final EditText usernameRegister;

  private ActivityRegistroBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull EditText emailRegister, @NonNull TextView loginText,
      @NonNull EditText nombreRegister, @NonNull EditText passwordRegister,
      @NonNull Button registerButton, @NonNull EditText usernameRegister) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.emailRegister = emailRegister;
    this.loginText = loginText;
    this.nombreRegister = nombreRegister;
    this.passwordRegister = passwordRegister;
    this.registerButton = registerButton;
    this.usernameRegister = usernameRegister;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegistroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegistroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegistroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.emailRegister;
      EditText emailRegister = ViewBindings.findChildViewById(rootView, id);
      if (emailRegister == null) {
        break missingId;
      }

      id = R.id.loginText;
      TextView loginText = ViewBindings.findChildViewById(rootView, id);
      if (loginText == null) {
        break missingId;
      }

      id = R.id.nombreRegister;
      EditText nombreRegister = ViewBindings.findChildViewById(rootView, id);
      if (nombreRegister == null) {
        break missingId;
      }

      id = R.id.passwordRegister;
      EditText passwordRegister = ViewBindings.findChildViewById(rootView, id);
      if (passwordRegister == null) {
        break missingId;
      }

      id = R.id.registerButton;
      Button registerButton = ViewBindings.findChildViewById(rootView, id);
      if (registerButton == null) {
        break missingId;
      }

      id = R.id.usernameRegister;
      EditText usernameRegister = ViewBindings.findChildViewById(rootView, id);
      if (usernameRegister == null) {
        break missingId;
      }

      return new ActivityRegistroBinding((ConstraintLayout) rootView, cardView, emailRegister,
          loginText, nombreRegister, passwordRegister, registerButton, usernameRegister);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
